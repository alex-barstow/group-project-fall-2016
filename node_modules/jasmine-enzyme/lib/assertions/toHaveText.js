'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _negateMessage = require('../negateMessage');

var _negateMessage2 = _interopRequireDefault(_negateMessage);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  toHaveText: function toHaveText() {
    function toHaveText(enzymeWrapper, text) {
      var actualText = enzymeWrapper.text();

      if (text === undefined) {
        return {
          pass: actualText.length > 0,
          message: 'Expected node to have text'
        };
      }

      return {
        pass: actualText === text,
        message: 'Expected "' + actualText + '" to equal "' + text + '"'
      };
    }

    return {
      compare: function compare(enzymeWrapper, text) {
        return toHaveText(enzymeWrapper, text);
      },
      negativeCompare: function negativeCompare(enzymeWrapper, text) {
        var result = toHaveText(enzymeWrapper, text);

        result.message = (0, _negateMessage2.default)(result.message);
        result.pass = !result.pass;

        return result;
      }
    };
  }
}; /**
    * This source code is licensed under the MIT-style license found in the
    * LICENSE file in the root directory of this source tree. *
    *
    * @providesModule toHaveText
    * 
    */

module.exports = exports['default'];