'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _negateMessage = require('../negateMessage');

var _negateMessage2 = _interopRequireDefault(_negateMessage);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  toHaveStyle: function toHaveStyle(util, customEqualityTesters) {
    function toHaveStyle(enzymeWrapper, styleKey, styleValue) {
      var style = enzymeWrapper.prop('style');

      // error if component doesnt have style
      if (!style) {
        return {
          pass: false,
          message: 'Expected component to have a style prop'
        };
      }

      // error if the style key doesnt exist
      if (!style.hasOwnProperty(styleKey)) {
        return {
          pass: false,
          message: 'Expected component to have style key of "' + styleKey + '"'
        };
      }

      return {
        pass: util.equals(style[styleKey], styleValue, customEqualityTesters),
        message: '\n          Expected component style values to match for key "' + styleKey + '":\n          Actual: ' + style[styleKey] + '\n          Expected: ' + styleValue + '\n        '
      };
    }
    return {
      compare: function compare(enzymeWrapper, styleKey, styleValue) {
        return toHaveStyle(enzymeWrapper, styleKey, styleValue);
      },
      negativeCompare: function negativeCompare(enzymeWrapper, styleKey, styleValue) {
        var result = toHaveStyle(enzymeWrapper, styleKey, styleValue);

        result.message = (0, _negateMessage2.default)(result.message);
        result.pass = !result.pass;

        return result;
      }
    };
  }
}; /**
    * This source code is licensed under the MIT-style license found in the
    * LICENSE file in the root directory of this source tree. *
    *
    * @providesModule toHaveStyle
    * 
    */

module.exports = exports['default'];