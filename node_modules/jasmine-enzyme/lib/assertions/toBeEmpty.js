'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _negateMessage = require('../negateMessage');

var _negateMessage2 = _interopRequireDefault(_negateMessage);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  toBeEmpty: function toBeEmpty() {
    function toBeEmpty(enzymeWrapper) {
      return {
        pass: enzymeWrapper.length === 0,
        message: 'Expected selector to return an empty set, but found ' + enzymeWrapper.length + ' nodes.' };
    }

    // eslint-disable-line max-len
    return {
      compare: function compare(enzymeWrapper) {
        return toBeEmpty(enzymeWrapper);
      },
      negativeCompare: function negativeCompare(enzymeWrapper) {
        var result = toBeEmpty(enzymeWrapper);

        result.message = (0, _negateMessage2.default)(result.message);
        result.pass = !result.pass;

        return result;
      }
    };
  }
}; /**
    * This source code is licensed under the MIT-style license found in the
    * LICENSE file in the root directory of this source tree. *
    *
    * @providesModule toBeEmpty
    * 
    */

module.exports = exports['default'];