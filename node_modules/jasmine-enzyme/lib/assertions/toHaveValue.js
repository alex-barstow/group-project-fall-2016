'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _negateMessage = require('../negateMessage');

var _negateMessage2 = _interopRequireDefault(_negateMessage);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  toHaveValue: function toHaveValue() {
    function toHaveValue(enzymeWrapper, expectedValue) {
      var pass = false;

      var props = enzymeWrapper.props();

      // set to the default checked
      if (props.hasOwnProperty('defaultValue')) {
        pass = props.defaultValue === expectedValue;
      }

      // if it has the `value` property, CHECK that
      if (props.hasOwnProperty('value')) {
        pass = props.value === expectedValue;
      }

      return {
        pass: pass,
        message: 'Expected "' + enzymeWrapper.html() + '" to have value of "' + expectedValue + '"'
      };
    }

    return {
      compare: function compare(enzymeWrapper, expectedValue) {
        return toHaveValue(enzymeWrapper, expectedValue);
      },
      negativeCompare: function negativeCompare(enzymeWrapper, expectedValue) {
        var result = toHaveValue(enzymeWrapper, expectedValue);

        result.message = (0, _negateMessage2.default)(result.message);
        result.pass = !result.pass;

        return result;
      }
    };
  }
}; /**
    * This source code is licensed under the MIT-style license found in the
    * LICENSE file in the root directory of this source tree. *
    *
    * @providesModule toHaveValue
    * 
    */

module.exports = exports['default'];