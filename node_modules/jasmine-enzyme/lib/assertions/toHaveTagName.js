'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _negateMessage = require('../negateMessage');

var _negateMessage2 = _interopRequireDefault(_negateMessage);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  toHaveTagName: function toHaveTagName() {
    function toHaveTagName(enzymeWrapper, tag) {
      if (enzymeWrapper.nodes.length > 1) {
        return {
          pass: false,
          message: 'Cannot verify tag name on a wrapper of multiple nodes. Found ' + enzymeWrapper.length + ' nodes.' };
      }

      // eslint-disable-line max-len
      return {
        pass: enzymeWrapper.type() === tag,
        message: 'Expected node to be of type "' + tag + '".'
      };
    }

    return {
      compare: function compare(enzymeWrapper, tag) {
        return toHaveTagName(enzymeWrapper, tag);
      },
      negativeCompare: function negativeCompare(enzymeWrapper, tag) {
        var result = toHaveTagName(enzymeWrapper, tag);

        result.message = (0, _negateMessage2.default)(result.message);
        result.pass = !result.pass;

        return result;
      }
    };
  }
}; /**
    * This source code is licensed under the MIT-style license found in the
    * LICENSE file in the root directory of this source tree. *
    *
    * @providesModule toHaveTagName
    * 
    */

module.exports = exports['default'];